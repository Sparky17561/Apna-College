1)To make a website responsive we give it a max width and when the width of website hits the max width or lower then apply the property
called flex-wrap : wrap ......it will wrap the flexbox elements and will be responsive.

Javascript:
case-sensitive
+++++++++++++++++++++++++++++++++++++++++++++++++
Console Uses REPL (Read-Evaluate-Print-Loop)
To clear -> CTRL + L 

+++++++++++++++++++++++++++++++++++++++++++++++++

typeof  (varname) --> shows datatype
2**3 = 8 (exponential)

NaN -> not a number (ex- 0/0)
+++++++++++++++++++++++++++++++++++++++++++++++++

1) let (keyword) -> syntax of declaring variables
----------------------------------------------
ex- 

let b; (variable "b" defined)

console.log(b) (we will get undefined)
-----------------------------------------------

2) const (keyword) -> values of constants can't be changed
with re-assignment and they can't be re-declared

------------------------------------------------

ex- const year = 2025

year = 2026 #error
year = year + 1 #error
------------------------------------------------

3) var (also used for variables but is old .... let replaced var)

++++++++++++++++++++++++++++++++++++++++++++++++++


Typescript is more stricter version of Javascript

ex- in JS -> a = 5 then a = "true" .....accepted
    in TS -> a = 5 then a = "true" .....rejected
    once defined as a number always a number
    JS is dynamic , TS is static


++++++++++++++++++++++++++++++++++++++++++++++++++++
Strings

.length --> used to get length of string
 + --> concatenation


 undefined --> value is not assigned and we are trying to print it
 null --> intentionally value not assigned

 "apnacollege" + 123 --> input (string + number)
 "apnacollege123" --> output (string)

++++++++++++++++++++++++++++++++++++++++++++++++++++

console.log(message) --> used to output a message

Template Literals

let a = 10;
let b = 5;
console.log(`sum is ${a+b}`);

output --> 15

"==" checks value
"===" checks value and type (strict comparison)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

alert("something is wrong") --> gives an alert

let name = prompt("Enter your name") --> gives a text field in alert and stores in name 


console.error() --> used for error

console.warn() --> used for warning

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


strings are immutable in JS

1) .trim() --> makes a new string which removes whitespaces from string it is used on
2) .toUpperCase() --> self explained
3) .toLowerCase() --> self explained
4) .indexOf() --> returns the first index of occurence of some value in string or gives -1 if not found


method chaining -> to use multiple methods on a string


.slice(start,end) --> returns a part of the original string -->end is exclusive

.replace("old","new") --> only first occurence is changed

.repeat(n) --> repeats the string n times


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Array (Data Structure)


let num =[2,3,4,5] --> square brackets are used
num[0] --> outputs "2"

typeof num --> returns object

let arr = [] --> accepted
let arr = ["hi",1,"how r u",7] --> accepted

.length --> used to get length for Array

arr[0][0] --> outputs 'i'

Arrays are mutable

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Array methods

.push(element) --> appends element in the last of the array
.pop() --> returns last element in array and removes the last element

.unshift(element) --> appends element in the start
.shift() --> returns the first element in the array and removes the first elements 

.indexOf(element) --> returns the index of that element from the array

.concat() --> used to merge 2 Arrays

ex - Array1.concat(Array2) 

.slice() --> works here also (same as string )

.splice(start,deleteCount,item0.....itemN) -> removes / replaces / adds element (all in one)

.sort() --> used for sorting in ascending alphabet

.reverse() --> used to reverse the array


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Array referencing --> each array has different address

if we compare arr1 == arr2 then it will return false bcaz both have different address (irrespective of elements)

but if we do arr2 = arr1 and then compare them it will return true as the address is also given to array 2 with elements


if we do const arr = [1,2,3]; 

value can be changed but address cannot override

ex - arr = cars will give error

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Nested Arrays --> visualize as matrix

Arrays of Arrays

ex - arr = [[1,2],[5,6]]

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


for Loop

ex - for(let i=1; i<=5; i++)
        {
            console.log(i)
        }


while loop

ex - while(condition)
    {
        // do something
    }


for of loop

ex- for (element of collection)
    {
        // do something
    }


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

JS object Literals --> used to store keyed collections and complex entitites

does not have a specific order 

ex - let student = {
        name : "sai",
        age : 23,
        marks : 95,
        city : "Mumbai"
};

How to get our values?

1. use student["name"]
2. use student.name

to update just write student.name = "new name"
to add -> student.newparameter = "value"
to delete -> delete student.name


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

We can also do nesting

